services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: langconnect-postgres
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}  # More descriptive DB name
      # Additional security settings
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize scripts (optional)
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - langconnect-network

  ollama:
    image: ollama/ollama:latest
    container_name: langconnect-ollama
    restart: always
    ports:
      - "11435:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    networks:
      - langconnect-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: langconnect-api
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_started
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # PostgreSQL connection settings
      POSTGRES_HOST: postgres  # Use service name
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      # Additional settings
      POSTGRES_SSLMODE: disable  # For development environment
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:${POSTGRES_PORT}/${POSTGRES_DB}
      # Ollama settings
      USE_OLLAMA_EMBEDDINGS: ${USE_OLLAMA_EMBEDDINGS:-false}
      OLLAMA_BASE_URL: ${OLLAMA_BASE_URL:-http://ollama:11434}
      OLLAMA_EMBEDDING_MODEL: ${OLLAMA_EMBEDDING_MODEL:-nomic-embed-text}
      # Allow all localhost origins
      ALLOW_ORIGINS: '["http://localhost:3000", "http://localhost:8080", "http://localhost", "http://127.0.0.1:3000", "http://127.0.0.1:8080", "http://127.0.0.1"]'
    volumes:
      - ./langconnect:/app/langconnect
    networks:
      - langconnect-network
      
  nextjs:
    build:
      context: ./next-connect-ui
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost:8080
        NEXTAUTH_URL: http://localhost:3000
        NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
    container_name: next-connect-ui
    restart: always
    depends_on:
      - api
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      API_URL: http://api:8080
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_API_URL: http://localhost:8080
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      SUPABASE_JWT_SECRET: ${SUPABASE_JWT_SECRET}
    networks:
      - langconnect-network


volumes:
  postgres_data:
    driver: local
  ollama_data:
    driver: local

networks:
  langconnect-network:
    driver: bridge